services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: deploy/web/Dockerfile
      target: development
    volumes:
      - ./src/ShoppingCenter.Web:/app
      - /app/node_modules
    ports:
      - 5173:5173
    environment:
      CHOKIDAR_USEPOLLING: "true"

  server:
    container_name: server-api
    build:
      context: .
      dockerfile: deploy/server/Dockerfile
      target: development
    volumes:
      - ./src:/source
    ports:
      - 8080:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - DOTNET_WATCH_RESTART_ON_RUDE_EDIT=true
    networks:
      - kafka
      - db

  service:
    container_name: server-service
    build:
      context: .
      dockerfile: deploy/service/Dockerfile
      target: development
    volumes:
      - ./src:/source
    develop:
      watch:
        - action: rebuild
          path: .
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_WATCH_RESTART_ON_RUDE_EDIT=true
    networks:
      - kafka
      - db

  db:
    container_name: db
    image: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
      - ./scripts/db/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - db

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - kafka

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    networks:
      - kafka
    depends_on:
      - zookeeper

networks:
  kafka:
  db:
